apiVersion: v1
data:
  trigger.yaml: |-
    port: 2148
    ip : ${POD_IP}
    send_event_goroutine_size: 1000
    send_event_batch_size: 32
    pull_event_batch_size: 32
    max_uack_event_number: 10000
    controllers:
      - vanus-controller-0.vanus-controller.vanus.svc:2048
      - vanus-controller-1.vanus-controller.vanus.svc:2048
      - vanus-controller-2.vanus-controller.vanus.svc:2048
kind: ConfigMap
metadata:
  name: config-trigger
  namespace: vanus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vanus-trigger
  name: vanus-trigger
  namespace: vanus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vanus-trigger
  template:
    metadata:
      annotations:
        vanus.dev/metrics.port: "2112"
      labels:
        app: vanus-trigger
    spec:
      initContainers:
        - name: set-system-parameters
          image: busybox
          securityContext:
            capabilities: { }
            privileged: true
          command: ["/bin/sh", "-c", "sysctl -w net.ipv4.tcp_tw_reuse=1 && sysctl -w net.ipv4.tcp_fin_timeout=10 && sysctl -w net.ipv4.ip_local_port_range='4096 65000' && sysctl -p"]
      nodeSelector:
        type: storage
      containers:
        - env:
            - name: VANUS_LOG_LEVEL
              value: INFO
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          image: public.ecr.aws/vanus/trigger:6b23e5a
          imagePullPolicy: IfNotPresent
          name: trigger
          resources:
            limits:
              cpu: 2000m
              memory: 2000Mi
            requests:
              cpu: 2000m
              memory: 2000Mi
          ports:
            - containerPort: 2148
              name: grpc
          volumeMounts:
            - mountPath: /vanus/config
              name: config-trigger
      volumes:
        - configMap:
            name: config-trigger
          name: config-trigger